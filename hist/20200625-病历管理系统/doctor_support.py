#! /usr/bin/env python
#  -*- coding: utf-8 -*-
#
# Support module generated by PAGE version 4.26
#  in conjunction with Tcl version 8.6
#    Jan 02, 2020 08:51:20 PM CST  platform: Windows NT

import sys
import pymysql

patient_id = 0
patient_name = ''
mr_type = 0
last_mr_id = 0

try:
    import Tkinter as tk
    import Tkinter.messagebox as v
except ImportError:
    import tkinter as tk
    import tkinter.messagebox as v

try:
    import ttk
    py3 = False
except ImportError:
    import tkinter.ttk as ttk
    py3 = True

def set_Tk_var():
    global mr_type
    mr_type = 0

    global combobox1
    combobox1 = tk.StringVar()
    global combobox2
    combobox2 = tk.StringVar()
    global combobox3
    combobox3 = tk.StringVar()
    global combobox4
    combobox4 = tk.StringVar()




def load_all_patient():
    try:
        conn = pymysql.connect(host = 'localhost', user = 'myuser', passwd = 'myuser', db = 'mydb',port = 3306)
        conn2 = pymysql.connect()
        cur = conn.cursor()
        cur.execute('select patient_id,patient_name FROM patient order by input_time asc')
        r = cur.fetchall()
        i = 0

        items = []
        for r1 in r:
            items.append(str(r1[0])+":"+r1[1])

        cur.close()
        conn.close()
        w.Combobox_patient.configure(values=items)

    except pymysql.Error as e:
        print('mysql error %d : %s' % (e.args[0],e.args[1]))
    sys.stdout.flush()
    w.Combobox_patient.current(0)


def load_part_patient():
    patient_name = w.Entry_patientname.get()
    xtitle = "查询"
    try:
        conn = pymysql.connect(host = 'localhost', user = 'myuser', passwd = 'myuser', db = 'mydb',port = 3306)

        cur = conn.cursor()
        cur.execute("select patient_id,patient_name FROM patient where patient_name like '%" + patient_name + "%' order by input_time asc")
        rows = cur.fetchall()

        items = []
        for r in rows:
            items.append(str(r[0])+":"+r[1])

        cur.close()
        conn.close()
        w.Combobox_patient.configure(values=items)
        if len(items)>0:
            w.Combobox_patient.current(0)
            sys.stdout.flush()
        else:
            v.showinfo(xtitle, "查询，没有名字含有" + patient_name + "的病人")

    except pymysql.Error as e:
        print('mysql error %d : %s' % (e.args[0],e.args[1]))
    sys.stdout.flush()



def load_current_patient_mr():
    patient_id_name = w.Combobox_patient.get()

    #v.showinfo(patient_id_name,"查询当前病人的病历")
    global patient_id
    global patient_name
    patient_id = patient_id_name.split(':')[0]
    patient_name = patient_id_name.split(':')[1]

    w.Label_pt_name.configure(text='''病人名称:''' + patient_name)

    try:
        conn = pymysql.connect(host='localhost', user='myuser', passwd='myuser', db='mydb',port=3306)

        cur = conn.cursor()
        cur.execute('select  mr_id ,patient_id,doctor_id,mr_result,mr_type,last_mr_id,mr_date from mr where patient_id =' + patient_id + ' order by mr_date desc limit 1')

        if cur.rowcount == 1:
            r = cur.fetchone()
            global last_mr_id
            last_mr_id = r[0]
            w.Button_last_mrid.configure(text='''有历史病历''')
        else:
            w.Button_last_mrid.configure(text='''没有历史病历''')

        cur.close()
        conn.close()

    except pymysql.Error as e:
        print('mysql error %d : %s' % (e.args[0],e.args[1]))
    sys.stdout.flush()

def admin_patient():
    #destroy_window()
    global patient_id
    import patient_admin
    patient_admin.vp_start_gui()
    sys.stdout.flush()

def save_current_patient_mr():
    #v.showinfo(patient_id_name,"查询当前病人的病历")
    global patient_id
    global patient_name
    import doctor
    doctor_id = doctor.login_userid
    mr_result = w.Text_mr_result.get("1.0", tk.END)
    global mr_type
    global last_mr_id

    try:
        conn = pymysql.connect(host='localhost', user='myuser', passwd='myuser', db='mydb',port=3306)
        cur = conn.cursor()
        values = [patient_id, doctor_id, mr_result, mr_type, last_mr_id]
        cur.execute('INSERT INTO mr(patient_id,doctor_id,mr_result,mr_type,last_mr_id,mr_date) VALUES(%s,%s,%s,%s,%s,now())', values)
        conn.commit()

        if cur.rowcount == 1:
            v.showinfo(patient_name, "病人病历保存成功")
        else:
            v.showerror(patient_name, "病人病历保存失败")

        cur.close()
        conn.close()

    except pymysql.Error as e:
        print('mysql error %d : %s' % (e.args[0],e.args[1]))
    sys.stdout.flush()

def mr_list():
    #destroy_window()
    global patient_id
    import mr_list
    mr_list.patient_id = patient_id
    mr_list.vp_start_gui()
    sys.stdout.flush()

def logout():
    destroy_window()
    import login
    login.vp_start_gui()
    sys.stdout.flush()

def init(top, gui, *args, **kwargs):
    global w, top_level, root
    w = gui
    top_level = top
    root = top

def destroy_window():
    # Function which closes the window.
    global top_level
    top_level.destroy()
    top_level = None

if __name__ == '__main__':
    import doctor
    doctor.vp_start_gui()




