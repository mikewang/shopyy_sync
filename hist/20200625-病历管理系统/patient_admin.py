#! /usr/bin/env python
#  -*- coding: utf-8 -*-
#
# GUI module generated by PAGE version 4.26
#  in conjunction with Tcl version 8.6
#    Jan 01, 2020 02:59:11 PM CST  platform: Windows NT

import sys
import pymysql

try:
    import Tkinter as tk
except ImportError:
    import tkinter as tk

try:
    import ttk

    py3 = False
except ImportError:
    import tkinter.ttk as ttk

    py3 = True

import patient_admin_support

patient_id = 0


def vp_start_gui():
    '''Starting point when module is the main routine.'''
    global val, w, root
    root = tk.Tk()
    top = Toplevel1(root)
    patient_admin_support.init(root, top)
    patient_admin_support.load_patient()

    root.mainloop()


w = None


def create_Toplevel1(root, *args, **kwargs):
    '''Starting point when module is imported by another program.'''
    global w, w_win, rt
    rt = root
    w = tk.Toplevel(root)
    top = Toplevel1(w)
    patient_admin_support.init(w, top, *args, **kwargs)
    return (w, top)


def destroy_Toplevel1():
    global w
    w.destroy()
    w = None


class Toplevel1:
    def __init__(self, top=None):
        '''This class configures and populates the toplevel window.
           top is the toplevel containing window.'''
        _bgcolor = '#d9d9d9'  # X11 color: 'gray85'
        _fgcolor = '#000000'  # X11 color: 'black'
        _compcolor = '#d9d9d9'  # X11 color: 'gray85'
        _ana1color = '#d9d9d9'  # X11 color: 'gray85'
        _ana2color = '#ececec'  # Closest X11 color: 'gray92'
        self.style = ttk.Style()
        if sys.platform == "win32":
            self.style.theme_use('winnative')
        self.style.configure('.', background=_bgcolor)
        self.style.configure('.', foreground=_fgcolor)
        self.style.configure('.', font="TkDefaultFont")
        self.style.map('.', background=
        [('selected', _compcolor), ('active', _ana2color)])

        top.geometry("1076x450+472+195")
        top.minsize(152, 1)
        top.maxsize(800, 600)
        top.resizable(1, 1)
        top.title("病人信息管理")
        top.configure(background="#d9d9d9")
        top.configure(highlightbackground="#d9d9d9")
        top.configure(highlightcolor="black")

        self.Label_patientname = tk.Label(top)
        location_x = 10
        location_y = 10
        component_w = 150
        self.Label_patientname.place(x=location_x, y=location_y, height=44, width=component_w)
        self.Label_patientname.configure(background="#FFFFF0")
        self.Label_patientname.configure(disabledforeground="#a3a3a3")
        self.Label_patientname.configure(font="TkFixedFont")
        self.Label_patientname.configure(foreground="#000000")
        self.Label_patientname.configure(text='''请输入病人名称''')

        v = tk.StringVar()
        self.Entry_patientname = tk.Entry(top, textvariable=v)
        location_x = location_x + component_w
        component_w = 150
        self.Entry_patientname.place(x=location_x, y=location_y + 5, height=34, width=component_w)
        self.Entry_patientname.configure(background="white")
        self.Entry_patientname.configure(disabledforeground="#a3a3a3")
        self.Entry_patientname.configure(font="TkFixedFont")
        self.Entry_patientname.configure(foreground="#000000")
        self.Entry_patientname.configure(highlightbackground="#d9d9d9")
        self.Entry_patientname.configure(highlightcolor="black")
        self.Entry_patientname.configure(insertbackground="black")
        self.Entry_patientname.configure(selectbackground="#c4c4c4")
        self.Entry_patientname.configure(selectforeground="black")

        self.Button_queryPatient = tk.Button(top)
        location_x = location_x + component_w + 10
        component_w = 100
        self.Button_queryPatient.place(x=location_x, y=location_y + 5, height=34, width=component_w)
        self.Button_queryPatient.configure(activebackground="#ececec")
        self.Button_queryPatient.configure(activeforeground="#000000")
        self.Button_queryPatient.configure(background="#d9d9d9")
        self.Button_queryPatient.configure(command=patient_admin_support.load_patient)
        self.Button_queryPatient.configure(disabledforeground="#a3a3a3")
        self.Button_queryPatient.configure(font="TkFixedFont")
        self.Button_queryPatient.configure(foreground="#000000")
        self.Button_queryPatient.configure(highlightbackground="#d9d9d9")
        self.Button_queryPatient.configure(highlightcolor="black")
        self.Button_queryPatient.configure(pady="0")
        self.Button_queryPatient.configure(text='''查询病人''')

        self.Button_queryPatient = tk.Button(top)
        location_x = location_x + component_w + 10
        component_w = 100
        self.Button_queryPatient.place(x=location_x, y=location_y + 5, height=34, width=component_w)
        self.Button_queryPatient.configure(activebackground="#ececec")
        self.Button_queryPatient.configure(activeforeground="#000000")
        self.Button_queryPatient.configure(background="#d9d9d9")
        self.Button_queryPatient.configure(command=patient_admin_support.add_patient)
        self.Button_queryPatient.configure(disabledforeground="#a3a3a3")
        self.Button_queryPatient.configure(font="TkFixedFont")
        self.Button_queryPatient.configure(foreground="#000000")
        self.Button_queryPatient.configure(highlightbackground="#d9d9d9")
        self.Button_queryPatient.configure(highlightcolor="black")
        self.Button_queryPatient.configure(pady="0")
        self.Button_queryPatient.configure(text='''新增病人''')

        self.back = tk.Button(top)
        location_x = location_x + component_w + 100
        component_w = 100
        self.back.place(x=location_x, y=location_y + 5, height=34, width=component_w)
        self.back.configure(activebackground="#ececec")
        self.back.configure(activeforeground="#000000")
        self.back.configure(background="#d9d9d9")
        self.back.configure(command=patient_admin_support.comeback)
        self.back.configure(cursor="hand2")
        self.back.configure(disabledforeground="#a3a3a3")
        self.back.configure(foreground="#000000")
        self.back.configure(highlightbackground="#d9d9d9")
        self.back.configure(highlightcolor="black")
        self.back.configure(pady="0")
        self.back.configure(text='''返回''')

        self.Treeview = ttk.Treeview(top)

        location_x = location_x + component_w + 10
        location_y = location_y + 44 + 10

        self.Treeview.place(relx=0.025, y=location_y, relheight=0.516, relwidth=0.95)

        self.Treeview.configure(columns="Col1 Col2 Col3 Col4")
        # build_treeview_support starting.
        self.Treeview.heading("#0", text="num")
        self.Treeview.heading("#0", anchor="center")
        self.Treeview.heading("#0", command="query")
        self.Treeview.column("#0", width="10")
        self.Treeview.column("#0", minwidth="10")
        self.Treeview.column("#0", stretch="1")
        self.Treeview.column("#0", anchor="center")
        self.Treeview.heading("Col1", text="病人ID")
        self.Treeview.heading("Col1", anchor="center")
        self.Treeview.column("Col1", width="100")
        self.Treeview.column("Col1", minwidth="20")
        self.Treeview.column("Col1", stretch="1")
        self.Treeview.column("Col1", anchor="center")
        self.Treeview.heading("Col2", text="病人")
        self.Treeview.heading("Col2", anchor="center")
        self.Treeview.column("Col2", width="64")
        self.Treeview.column("Col2", minwidth="20")
        self.Treeview.column("Col2", stretch="1")
        self.Treeview.column("Col2", anchor="center")
        self.Treeview.heading("Col3", text="录入时间")
        self.Treeview.heading("Col3", anchor="center")
        self.Treeview.column("Col3", width="80")
        self.Treeview.column("Col3", minwidth="20")
        self.Treeview.column("Col3", stretch="1")
        self.Treeview.column("Col3", anchor="center")
        self.Treeview.heading("Col4", text="年龄")
        self.Treeview.heading("Col4", anchor="center")
        self.Treeview.column("Col4", width="60")
        self.Treeview.column("Col4", minwidth="100")
        self.Treeview.column("Col4", stretch="1")
        self.Treeview.column("Col4", anchor="center")
        self.Treeview['show'] = 'headings'

        self.Treeview.bind("<Double-1>", self.OnDoubleClick)
        self.Treeview.bind("<Button-1>", self.OnDoubleClick)

        self.Label_id = tk.Label(top)
        location_x = 10
        location_y = 330
        component_w = 40
        self.Label_id.place(x=location_x, y=location_y, height=44, width=component_w)

        self.Label_id.configure(text='''''')

        self.Label_name = tk.Label(top)
        location_x = location_x + component_w
        component_w = 80
        self.Label_name.place(x=location_x, y=location_y, height=44, width=component_w)

        self.Label_name.configure(text='''病人名称''')

        v = tk.StringVar()
        self.Entry_name = tk.Entry(top, textvariable=v)
        location_x = location_x + component_w
        component_w = 150
        self.Entry_name.place(x=location_x, y=location_y + 5, height=34, width=component_w)
        self.Entry_name.configure(background="white")
        self.Entry_name.configure(disabledforeground="#a3a3a3")
        self.Entry_name.configure(font="TkFixedFont")
        self.Entry_name.configure(foreground="#000000")
        self.Entry_name.configure(highlightbackground="#d9d9d9")
        self.Entry_name.configure(highlightcolor="black")
        self.Entry_name.configure(insertbackground="black")
        self.Entry_name.configure(selectbackground="#c4c4c4")
        self.Entry_name.configure(selectforeground="black")

        self.Label_age = tk.Label(top)
        location_x = location_x + component_w + 10
        component_w = 80
        self.Label_age.place(x=location_x, y=location_y, height=44, width=component_w)

        self.Label_age.configure(text='''病人年龄''')

        v = tk.StringVar()
        self.Entry_age = tk.Entry(top, textvariable=v)
        location_x = location_x + component_w
        component_w = 150
        self.Entry_age.place(x=location_x, y=location_y + 5, height=34, width=component_w)
        self.Entry_age.configure(background="white")
        self.Entry_age.configure(disabledforeground="#a3a3a3")
        self.Entry_age.configure(font="TkFixedFont")
        self.Entry_age.configure(foreground="#000000")
        self.Entry_age.configure(highlightbackground="#d9d9d9")
        self.Entry_age.configure(highlightcolor="black")
        self.Entry_age.configure(insertbackground="black")
        self.Entry_age.configure(selectbackground="#c4c4c4")
        self.Entry_age.configure(selectforeground="black")

        self.Button_deletePatient = tk.Button(top)
        location_x = location_x + component_w + 10
        component_w = 100
        self.Button_deletePatient.place(x=location_x, y=location_y + 5, height=34, width=component_w)
        self.Button_deletePatient.configure(activebackground="#ececec")
        self.Button_deletePatient.configure(activeforeground="#000000")
        self.Button_deletePatient.configure(background="#d9d9d9")
        self.Button_deletePatient.configure(command=patient_admin_support.delete_patient)
        self.Button_deletePatient.configure(disabledforeground="#a3a3a3")
        self.Button_deletePatient.configure(font="TkFixedFont")
        self.Button_deletePatient.configure(foreground="#000000")
        self.Button_deletePatient.configure(highlightbackground="#d9d9d9")
        self.Button_deletePatient.configure(highlightcolor="black")
        self.Button_deletePatient.configure(pady="0")
        self.Button_deletePatient.configure(text='''删除病人''')

        self.Button_savePatient = tk.Button(top)
        location_x = location_x + component_w + 10
        component_w = 100
        self.Button_savePatient.place(x=location_x, y=location_y + 5, height=34, width=component_w)
        self.Button_savePatient.configure(activebackground="#ececec")
        self.Button_savePatient.configure(activeforeground="#000000")
        self.Button_savePatient.configure(background="#d9d9d9")
        self.Button_savePatient.configure(command=patient_admin_support.modify_patient)
        self.Button_savePatient.configure(disabledforeground="#a3a3a3")
        self.Button_savePatient.configure(font="TkFixedFont")
        self.Button_savePatient.configure(foreground="#000000")
        self.Button_savePatient.configure(highlightbackground="#d9d9d9")
        self.Button_savePatient.configure(highlightcolor="black")
        self.Button_savePatient.configure(pady="0")
        self.Button_savePatient.configure(text='''保存信息''')

    def OnDoubleClick(self, event):
        item = self.Treeview.selection()

        text1 = self.Treeview.set(item, "Col1");
        text2 = self.Treeview.set(item, "Col2");
        text4 = self.Treeview.set(item, "Col4");
        self.Label_id.configure(text=text1)
        self.Entry_name.delete(first=0, last='end')
        self.Entry_name.insert(0,text2)
        self.Entry_age.delete(first=0, last='end')
        self.Entry_age.insert(0,text4)


        print("you clicked on", text1)


if __name__ == '__main__':
    vp_start_gui()
