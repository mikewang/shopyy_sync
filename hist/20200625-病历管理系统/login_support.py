#! /usr/bin/env python
#  -*- coding: utf-8 -*-
#
# Support module generated by PAGE version 4.26
#  in conjunction with Tcl version 8.6
#    Dec 31, 2019 03:52:06 PM CST  platform: Windows NT

import sys
import pymysql
f1 = 0
try:
    import Tkinter as tk
    import Tkinter.messagebox as v
except ImportError:
    import tkinter as tk
    import tkinter.messagebox as v

try:
    import ttk
    py3 = False
except ImportError:
    import tkinter.ttk as ttk
    py3 = True

def set_Tk_var():
    global selectedButton
    selectedButton = tk.IntVar()

def manager_login():
    global f1
    f1 = 1
    sys.stdout.flush()

def user_login():
    global f1
    f1 = 0
    sys.stdout.flush()

def login():
    global f1
    userid = w.Entry_userid.get()
    userpwd = w.Entry_password.get()
    try:
        conn = pymysql.connect(host = 'localhost', user = 'myuser', passwd = 'myuser', db = 'mydb',port = 3306)

        cur = conn.cursor()
        if f1 == 1:
            if userid != "" and userpwd != "":
                #v.showerror(username, "登录失败，请检查用户名和密码")
                #mu.login_username = "admin"
                #mu.login_userid = 1
                v.showinfo(userid, "登录成功")

            else:
                v.showerror(userid, "用户名和密码不能为空")
        elif f1 == 0:
            if userid != "" and userpwd != "":
                cur.execute('SELECT doctor_pwd,doctor_name FROM doctor WHERE doctor_id = %s',userid)
                r = cur.fetchone()
                print(r)
                if r == None:
                    v.showerror(userid, "不存在此用户")
                elif r[0] == userpwd:
                    v.showinfo(r[1], "登录成功")
                    destroy_window()
                    import doctor
                    doctor.login_username = r[1]
                    doctor.login_userid = userid
                    doctor.vp_start_gui()
                else:
                    v.showerror(userid, "登录失败，请检查用户名和密码")
            else:
                v.showerror(userid, "用户名和密码不能为空")
        cur.close()
        conn.close()
    except pymysql.Error as e:
        print('mysql error %d : %s' % (e.args[0],e.args[1]))
    sys.stdout.flush()

def quit():
    root.quit()
    sys.stdout.flush()

def init(top, gui, *args, **kwargs):
    global w, top_level, root
    w = gui
    top_level = top
    root = top

def destroy_window():
    global top_level
    top_level.destroy()
    top_level = None

if __name__ == '__main__':
    import login
    login.vp_start_gui()




