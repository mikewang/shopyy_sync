# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'Sync_Main_Form.ui'
#
# Created by: PyQt5 UI code generator 5.15.0
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.
# 导入程序运行必须模块
import sys
import datetime
import os
import configparser
import logging
# PyQt5中使用的基本控件都在PyQt5.QtWidgets模块中
from PyQt5.QtCore import pyqtSignal, Qt
from PyQt5.QtWidgets import QApplication, QMainWindow
from PyQt5.QtWebEngineWidgets import *
from PyQt5.QtGui import QPixmap
# 导入designer工具生成的模块
from Spider.spider import Ui_Form as MainForm


class MainWindow(QMainWindow, MainForm):
    _title = "数据抽取"
    _product_spec_first = None
    _default_scheduler = None

    def __init__(self, parent=None):
        super().__init__(parent=parent)
        self.setupUi(self)
        self.setWindowTitle(self._title)
        logging.basicConfig(format='%(asctime)s - %(filename)s[line:%(lineno)d] - %(levelname)s: %(message)s',
                            level=logging.WARNING,
                            filename='spider.log',
                            filemode='a')
        self.checkBox_product_auto_sync.stateChanged.connect(self.start_auto_sync)
        # btn_product_offline_sync
        self.pushButton_query.clicked.connect(lambda: self.query_content())
        self.pushButton_send.clicked.connect(lambda: self.send_content())

    def query_content(self):
        try:
            pass
        except Exception as e:
            print(e)

    def send_content(self):
        try:
            pass
        except Exception as e:
            print(e)


if __name__ == '__main__':
    app = QApplication(sys.argv)
    mainWindow = MainWindow()
    mainWindow.show()
    sys.exit(app.exec_())
